


package quanlibanhang;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author Thảo
 */
public class ThemPN extends javax.swing.JFrame {


    public ThemPN() {
        initComponents();
        //xử lí thời gian
        LocalDateTime time = LocalDateTime.now();
        DateTimeFormatter formater = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        this.ngayNhapPhieuNhap.setText(time.format(formater));
        this.txtHanSuDung.setText(time.format(formater));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMaPhieuNhap = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ngayNhapPhieuNhap = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSoLo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        themSanPham = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePhieuNhap = new javax.swing.JTable();
        buttonLuu = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        txtHanSuDung = new javax.swing.JTextField();

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÍ CỬA HÀNG");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Mã Phiếu Nhập:");

        jScrollPane1.setViewportView(txtMaPhieuNhap);

        jPanel1.setBackground(new java.awt.Color(255, 153, 204));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Thêm Phiếu Nhập");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Ngày Nhập:");

        ngayNhapPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngayNhapPhieuNhapActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mã Sản Phẩm:");

        txtMaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSanPhamActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Số Lô: ");

        txtSoLo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Hạn sử dụng: ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Số Lượng:");

        txtSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        themSanPham.setBackground(new java.awt.Color(255, 204, 255));
        themSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        themSanPham.setText("Thêm");
        themSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themSanPhamActionPerformed(evt);
            }
        });

        tablePhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Phiếu Nhập", "Ngày Nhập", "Mã Sản Phẩm", "Số Lô", "Hạn Sử Dụng", "Số Lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablePhieuNhap);

        buttonLuu.setBackground(new java.awt.Color(255, 204, 255));
        buttonLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonLuu.setText("Lưu");
        buttonLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLuuActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(255, 0, 0));
        exit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        txtHanSuDung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHanSuDungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(themSanPham)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtSoLo, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(txtMaSanPham)
                                    .addComponent(txtSoLuong)
                                    .addComponent(txtHanSuDung))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(219, 219, 219)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ngayNhapPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(108, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonLuu)
                .addGap(27, 27, 27)
                .addComponent(exit)
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(ngayNhapPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtSoLo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtHanSuDung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(themSanPham))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLuu)
                    .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ngayNhapPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngayNhapPhieuNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ngayNhapPhieuNhapActionPerformed

    private void txtMaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSanPhamActionPerformed

    private void themSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themSanPhamActionPerformed
        // TODO add your handling code here:
        String getMaPhieuNhap = txtMaPhieuNhap.getText();
        String getMaSanPham = txtMaSanPham.getText();
        String getSoLo = txtSoLo.getText();
        String getSoLuong = txtSoLuong.getText();
        Connection con ;
        Connection conn;
        Connection connn;
        Statement stmt ;
        Statement  stmt1 ;
        Statement  stmt2 ;
       
        
        String maPhieuNhapCheck = null;
        String maSanPhamCheck =  null;
        String soLoCheck = null;
        
        if (getMaPhieuNhap.equals("") ||getMaSanPham.equals("") ||getSoLo.equals("") ||
                getSoLuong.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "lỗi thiếu dữ liệu");
            return;
        }
         else {
                
                try {
                    con = DBConnect.getConnection();
                    stmt = con.createStatement();
                    String sql = "SELECT * FROM nhaphang WHERE maPhieuNhap ='"+txtMaPhieuNhap.getText() +"'";
                    ResultSet rs = stmt.executeQuery(sql);
                    while (rs.next()) {
                        maPhieuNhapCheck = rs.getString("maPhieuNhap");
                    }
                    rs.close();
                    stmt.close();
                    con.close();
                    if(getMaPhieuNhap.equals(maPhieuNhapCheck)){
                        JOptionPane.showMessageDialog(rootPane, "mã phiếu nhập đã tồn tại!");
                        return;
                    }
                
                
                } catch (SQLException ex) {
                    Logger.getLogger(ThemPN.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    conn = DBConnect.getConnection();
                    stmt1 = conn.createStatement();
                    String sql = "SELECT maSanPham FROM quanlisanpham WHERE maSanPham ='"+txtMaSanPham.getText() +"'";
                    ResultSet rs = stmt1.executeQuery(sql);
                    while (rs.next()) {
                        maSanPhamCheck = rs.getString("maSanPham");
                    }
                    rs.close();
                    stmt1.close();
                    conn.close();
                    if(getMaSanPham.equals(maSanPhamCheck)){
                    }else{
                        JOptionPane.showMessageDialog(rootPane, " Mã sản phẩm chưa có trong quản lí sản phẩm , không thể nhập!");
                        return ;
                    }
                }catch (SQLException ex) {
                    Logger.getLogger(ThemPN.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                try {
                    connn = DBConnect.getConnection();
                    stmt2 = connn.createStatement();
                    String sql = "SELECT * FROM nhaphang WHERE maSanPham ='"+txtMaSanPham.getText() +"' and soLo = '"+ txtSoLo.getText()
                            +"'";
                    ResultSet rs = stmt2.executeQuery(sql);
                    while (rs.next()) {
                        soLoCheck = rs.getString("soLo");
                    }
                    rs.close();
                    stmt2.close();
                    connn.close();
                    if(soLoCheck == null){
                    }else{
                         JOptionPane.showMessageDialog(rootPane, "số lô hàng của mã sản phẩm này đã tồn tại!");
                         return ;
                    }
                }catch (SQLException ex) {
                    Logger.getLogger(ThemPN.class.getName()).log(Level.SEVERE, null, ex);
                }
         
            DefaultTableModel model =  (DefaultTableModel) this.tablePhieuNhap.getModel();
            model.addRow(new Object[]{txtMaPhieuNhap.getText(),ngayNhapPhieuNhap.getText(), txtMaSanPham.getText(),txtSoLo.getText(),
                txtHanSuDung.getText(),txtSoLuong.getText()});
        }

        txtMaSanPham.setText(null);
        txtSoLo.setText(null);
        txtSoLuong.setText(null);
    }//GEN-LAST:event_themSanPhamActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        dispose();
        JFTrangChu jf = new JFTrangChu();
        jf.show();
        
    }//GEN-LAST:event_exitActionPerformed

    private void buttonLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLuuActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.tablePhieuNhap.getModel();
        int rowTable = tablePhieuNhap.getRowCount();
        PreparedStatement stmt;
        PreparedStatement stmt1;
        Connection con ;
        Connection conn;
        
        
        try {
            con = DBConnect.getConnection();
            String sql ="INSERT INTO nhaphang (maPhieuNhap, ngayNhap, maSanPham, soLo, hanSuDung ,soLuong) VALUES (?, ?, ? ,?,?,?)";
            stmt = con.prepareStatement(sql);
            for (int i = 0; i < rowTable; i++) {
                String data1 = model.getValueAt(i, 0).toString();
                String data2 = model.getValueAt(i, 1).toString();
                String data3 = model.getValueAt(i, 2).toString();
                String data4 = model.getValueAt(i, 3).toString();
                String data5 = model.getValueAt(i, 4).toString();
                Object data6 =  model.getValueAt(i, 5);

                stmt.setString(1, data1);
                stmt.setString(2, data2);
                stmt.setString(3, data3);
                stmt.setString(4, data4);
                stmt.setString(5, data5);
                stmt.setObject(6, data6);
                stmt.executeUpdate();
            }
            con.close();
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(ThemPN.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //lưu số lượng sản phẩm nhập vào số lượng sản phẩm hiện có.
        try {
            conn = DBConnect.getConnection();
            String sql ="INSERT INTO sanphamhienco (maSanPham, soLo , soLuong) VALUES (?, ?, ?)";
            stmt1 = conn.prepareStatement(sql);
            for (int i = 0; i < rowTable; i++) {
                String data1 = model.getValueAt(i, 2).toString();
                String data2 = model.getValueAt(i, 3).toString();
                Object data3 = model.getValueAt(i, 5);
              
                stmt1.setString(1, data1);
                stmt1.setString(2, data2);
                stmt1.setObject(3, data3);
                stmt1.executeUpdate();
            }
            conn.close();
            stmt1.close();
            JOptionPane.showMessageDialog(rootPane, "update succesfull");
            exitActionPerformed(evt);
        } catch (SQLException ex) {
            Logger.getLogger(ThemPN.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_buttonLuuActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void txtHanSuDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHanSuDungActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHanSuDungActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ThemPN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonLuu;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField ngayNhapPhieuNhap;
    private javax.swing.JTable tablePhieuNhap;
    private javax.swing.JButton themSanPham;
    private javax.swing.JTextField txtHanSuDung;
    private javax.swing.JTextPane txtMaPhieuNhap;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtSoLo;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables
}
